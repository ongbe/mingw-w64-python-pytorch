diff -urN -x '*.orig' '-x*.rej' pytorch-1.4.0.orig/tools/setup_helpers/cmake.py pytorch-1.4.0/tools/setup_helpers/cmake.py
--- pytorch-1.4.0.orig/tools/setup_helpers/cmake.py	2020-02-04 20:58:29.818000000 +0800
+++ pytorch-1.4.0/tools/setup_helpers/cmake.py	2020-02-05 11:46:13.398000000 +0800
@@ -171,12 +171,6 @@
             args.append('-GNinja')
         elif IS_WINDOWS:
             generator = os.getenv('CMAKE_GENERATOR', 'Visual Studio 15 2017')
-            supported = ['Visual Studio 15 2017', 'Visual Studio 16 2019']
-            if generator not in supported:
-                print('Unsupported `CMAKE_GENERATOR`: ' + generator)
-                print('Please set it to one of the following values: ')
-                print('\n'.join(supported))
-                sys.exit(1)
             args.append('-G' + generator)
             toolset_dict = {}
             toolset_version = os.getenv('CMAKE_GENERATOR_TOOLSET_VERSION')
@@ -189,11 +183,9 @@
                           'in the build steps carefully.')
                     sys.exit(1)
             if IS_64BIT:
-                args.append('-Ax64')
                 toolset_dict['host'] = 'x64'
             if toolset_dict:
                 toolset_expr = ','.join(["{}={}".format(k, v) for k, v in toolset_dict.items()])
-                args.append('-T' + toolset_expr)
 
         base_dir = os.path.dirname(os.path.dirname(os.path.dirname(
             os.path.abspath(__file__))))
@@ -329,7 +321,7 @@
         # minimum, which provides a '-j' option: build_args += ['-j', max_jobs]
         # would be sufficient by then.
         if IS_WINDOWS and not USE_NINJA:  # We are likely using msbuild here
-            build_args += ['--', '/maxcpucount:{}'.format(max_jobs)]
+            build_args += ['-j', max_jobs]
         else:
             build_args += ['--', '-j', max_jobs]
         self.run(build_args, my_env)
